{"version":3,"sources":["App.js","components/Confirm.js","components/TeamForm.js","components/SingleForm.js","index.js"],"names":["images","useStyles","createMuiTheme","palette","primary","main","secondary","light","contrastText","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","zIndex","color","opcaity","card","minWidth","cardbullet","display","margin","transform","cardtitle","fontSize","cardpos","marginBottom","gridroot","overflow","padding","paper","maxWidth","registerpaper","textAlign","text","eventroot","width","TextField","overlay","position","height","backgroundColor","opacity","textcontainer","top","left","right","border","borderColor","borderWidth","Confirm","data","single","Fragment","name","email","events","college","stay","teamMemberCount","teamMemberName","map","member","index","TeamForm","classes","marginLeft","marginTop","useState","formView","setFormView","setData","React","choosenEvents","setChoosenEvents","additionalTeamMembers","setAdditionalMembers","className","Validate","autoComplete","onSubmit","event","preventDefault","length","inputData","document","getElementById","value","checked","i","push","alert","id","label","variant","fullWidth","required","type","InputProps","inputProps","min","onChange","target","num","inputFields","key","generateNameFields","InputLabel","Select","labelId","multiple","input","Input","MenuItem","FormControlLabel","control","Checkbox","Button","onClick","console","log","SingleForm","nameInput","setNameInput","emailInput","setEmailInput","collegeInput","setCollegeInput","stayInput","setStayInput","routing","basename","exact","path","component","setIndex","useEffect","timer","setInterval","prev","clearInterval","ThemeProvider","AppBar","Toolbar","Typography","align","Paper","style","background","onRequestChange","image","objectFit","src","class","Grid","container","item","xs","Link","to","Card","CardContent","gutterBottom","pos","render"],"mappings":"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","file":"static/js/main.47fec632.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {Gallery, GalleryImage } from 'react-gesture-gallery';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport zIndex from '@material-ui/core/styles/zIndex';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst images = [\r\n  'http://www.icons101.com/icon_png/size_256/id_76704/Google_Settings.png',\r\n  'http://www.icons101.com/icon_png/size_256/id_80975/GoogleInbox.png',\r\n  'http://www.icons101.com/icon_png/size_256/id_79394/youtube.png',\r\n];\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      // light: will be calculated from palette.primary.main,\r\n      main: '#D98825',\r\n      // dark: will be calculated from palette.primary.main,\r\n      // contrastText: will be calculated to contrast with palette.primary.main\r\n    },\r\n    secondary: {\r\n      light: '#F2B84B',\r\n      main: '#D98825',\r\n      // dark: will be calculated from palette.secondary.main,\r\n      contrastText: '#ffcc00',\r\n    },\r\n    // error: will use the default color\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    zIndex: 1,\r\n    color: 'white',\r\n    opcaity:1,\r\n  },\r\n  card: {\r\n    minWidth: 275,\r\n  },\r\n  cardbullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  cardtitle: {\r\n    fontSize: 14,\r\n  },\r\n  cardpos: {\r\n    marginBottom: 12,\r\n  },\r\n  gridroot: {\r\n    flexGrow: 1,\r\n    overflow: 'hidden',\r\n    padding: theme.spacing(0, 3),\r\n  },\r\n  paper: {\r\n    maxWidth: 700,\r\n    margin: `${theme.spacing(1)}px auto`,\r\n    padding: theme.spacing(2),\r\n  },\r\n  registerpaper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  eventroot: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: 200,\r\n    },\r\n  },\r\n  TextField: {\r\n    margin: 10,\r\n  },\r\n  overlay: {\r\n    position:'absolute',\r\n    width: '99.09%',\r\n    height: '90vh',\r\n    backgroundColor:'black',\r\n    zIndex:1,\r\n    opacity:0.5,\r\n  },\r\n  textcontainer: {\r\n    position: 'absolute',\r\n    top:'45%',\r\n    left:'30%',\r\n    right:'30%',\r\n    color: 'white',\r\n    border: 'solid',\r\n    borderColor:'white',\r\n    opcaity:1,\r\n    borderWidth: 'thick ',\r\n    zIndex: 2,\r\n  }\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const[index,setIndex] = React.useState(0)\r\n  const classes = useStyles();\r\n  const [events, setEvents] = React.useState('1');  \r\n\r\n  const handleChange = event => {\r\n    setEvents(events.target.value);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      if (index === 2) {\r\n        setIndex(0);\r\n      } else {\r\n        setIndex(prev => prev + 1);\r\n      }\r\n    }, 3000);\r\n    return () => clearInterval(timer);\r\n  }, [index]);\r\n\r\n  return (\r\n    <ThemeProvider>\r\n    <div className={classes.root}>\r\n      <AppBar position=\"sticky\" color='secondary'>\r\n        <Toolbar>\r\n          <Typography variant=\"h5\" className={classes.title} align='center'>\r\n            AAHVAAN\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n    <div className={classes.textcontainer} align=\"center\">\r\n      <Typography variant=\"h1\" className={classes.title} align='center' color=\"textPrimary\">AAHVAAN\r\n      </Typography>\r\n      </div>\r\n    <div className={classes.overlay}>\r\n    </div>\r\n    <Paper>\r\n      <Gallery\r\n        style={{\r\n          background: \"grey\",\r\n          height: \"90vh\",\r\n          width: '100%',\r\n        }}\r\n        index={index}\r\n        onRequestChange={i => {\r\n          setIndex(i);\r\n        }}\r\n      >\r\n        {images.map(image => (\r\n          <GalleryImage objectFit=\"contain\" key={image} src={image} class=\"image\"/>\r\n        ))}\r\n      </Gallery>\r\n    </Paper>\r\n    <div className={classes.root}>\r\n      <AppBar position=\"sticky\" color='secondary'>\r\n        <Toolbar>\r\n          <Typography variant=\"h5\" className={classes.title} align='center'>\r\n            REGISTER\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n\r\n    {/*---------My Changes-------------*/}\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={6}>\r\n        <Paper className={classes.paper}>\r\n          <Button component={ Link } to=\"/single\" variant=\"contained\" color=\"secondary\">\r\n            Single\r\n          </Button>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Paper className={classes.paper}>\r\n          <Button component={ Link } to=\"/team\" variant=\"contained\" color=\"secondary\">\r\n            Team\r\n          </Button>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n    {/*------------END----------------*/}\r\n\r\n    <Paper>\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n            Delhi Technological University\r\n          </Typography>\r\n          <Typography variant=\"h5\" component=\"h2\" color=\"textSecondary\">\r\n            AAHVAAN\r\n          </Typography>\r\n          <Typography className={classes.pos} color=\"textSecondary\">\r\n            @aahvaan\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\" color=\"textSecondary\">\r\n            THIS IS FOOTER\r\n            <br />\r\n            {'\"sports spirit\"'}\r\n          </Typography>\r\n        </CardContent>\r\n        </Card>  \r\n      </Paper>\r\n    </ThemeProvider>    \r\n  );\r\n}","import React from 'react'\r\n\r\nconst generateMembersList = (members) => {\r\n  return(\r\n    members.map((member, index) => <p>Member {index + 1}: {member}</p>)\r\n  )\r\n}\r\n\r\nconst Confirm = ({ data }) => {\r\n  if (data.single) {\r\n    // For single registrations.\r\n    return (\r\n      <React.Fragment>\r\n        <p>Registration type: Single</p>\r\n        <p>Name: {data.name}</p>\r\n        <p>Email-id: {data.email}</p>\r\n        <p>Event: {data.events}</p>\r\n        <p>College: {data.college}</p>\r\n        <p>Accommodation wanted: {data.stay ? 'Yes' : 'No'}</p>\r\n      </React.Fragment>\r\n    )\r\n  } else {\r\n    // For team registrations.\r\n    return (\r\n      <React.Fragment>\r\n        <p>Registration type: Team</p>\r\n        <p>Name (Leader): {data.name}</p>\r\n        <p>Email-id (Leader): {data.email}</p>\r\n        <p>Event: {data.events}</p>\r\n        <p>Members Count: {data.teamMemberCount}</p>\r\n        <p>Members Name:</p>\r\n        {generateMembersList(data.teamMemberName)}\r\n        <p>College: {data.college}</p>\r\n        <p>Accommodation wanted: {data.stay ? 'Yes' : 'No'}</p>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Confirm","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Confirm from './Confirm';\r\n\r\nconst TeamForm = () => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      zIndex: 1,\r\n      color: 'white',\r\n      opcaity:1,\r\n    },\r\n    card: {\r\n      minWidth: 275,\r\n    },\r\n    cardbullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    cardtitle: {\r\n      fontSize: 14,\r\n    },\r\n    cardpos: {\r\n      marginBottom: 12,\r\n    },\r\n    gridroot: {\r\n      flexGrow: 1,\r\n      overflow: 'hidden',\r\n      padding: theme.spacing(0, 3),\r\n    },\r\n    paper: {\r\n      maxWidth: 700,\r\n      margin: `${theme.spacing(1)}px auto`,\r\n      padding: theme.spacing(2),\r\n    },\r\n    registerpaper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    eventroot: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: 200,\r\n      },\r\n    },\r\n    TextField: {\r\n      margin: 10,\r\n    },\r\n    overlay: {\r\n      position:'absolute',\r\n      width: '100%',\r\n      height: '90vh',\r\n      backgroundColor:'black',\r\n      zIndex:1,\r\n      opacity:0.5,\r\n    },\r\n    textcontainer: {\r\n      padding: '16px 32px',\r\n      position: 'absolute',\r\n      marginLeft:650,\r\n      marginTop:300,\r\n      color: 'white',\r\n      border: 'solid',\r\n      borderColor:'white',\r\n      opcaity:1,\r\n      borderWidth: 'thick ',\r\n      zIndex: 2,\r\n    }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const [formView, setFormView] = useState(true)\r\n  const [data, setData] = useState({})\r\n  //----------- Function to handle form submission -----------\r\n  const handleSubmission = (event) => {\r\n    // Handle the form submission.\r\n    event.preventDefault()\r\n    if (choosenEvents.length === 0) {\r\n      alert('Please fill the events you want to participate in.')\r\n      return\r\n    }\r\n\r\n    const inputData = {\r\n      name: document.getElementById('name-leader').value,\r\n      email: document.getElementById('email').value,\r\n      teamMemberCount: document.getElementById('member-count').value,\r\n      teamMemberName: [],\r\n      events: choosenEvents,\r\n      college: document.getElementById('college').value,\r\n      stay: document.getElementById('stay-check').checked,\r\n    }\r\n    // Run a loop to collect the names of the team-members\r\n    for (let i = 0; i < additionalTeamMembers; i++) {\r\n      inputData.teamMemberName.push(document.getElementById(`member-name${i}`).value)\r\n    }\r\n\r\n    setData(inputData)\r\n    setFormView(false)\r\n  }\r\n\r\n  // Event-handler for edit button click\r\n  const handleEdit = () => {\r\n    setFormView(true)\r\n  }\r\n\r\n  // Event-handler for proceed button click\r\n  const submitForm = () => {\r\n    console.log('Clicked')\r\n    /*\r\n    -\r\n    - Write the code to push the userInput to database inside this function.\r\n    -\r\n    */\r\n  }\r\n\r\n  // ----Event handler for member count input----\r\n  const handleTeamNumberChange = (event) => {\r\n    setAdditionalMembers(event.target.value)\r\n  }\r\n    \r\n  // Logic for the drop-down menu.\r\n  // List of events to choose from. Change it to add the events.\r\n  const sportsEvents = [\r\n    'Event1',\r\n    'Event2',\r\n    'Event3',\r\n    'Event4',\r\n    'Event5',\r\n    'Event6'\r\n  ];\r\n    \r\n  const [choosenEvents, setChoosenEvents] = React.useState([])\r\n    \r\n  const handleChangeMultiple = event => {\r\n    setChoosenEvents(event.target.value)\r\n  };\r\n  \r\n  const [additionalTeamMembers, setAdditionalMembers] = React.useState('')\r\n  // Function to generate the field for members.\r\n  const generateNameFields = (num) => {\r\n    const inputFields = []\r\n    for (let i = 0; i < num; i++)\r\n      inputFields.push(<TextField required key={i} id={`member-name${i}`} label={`Member ${i+1}`} variant=\"outlined\" fullWidth={true} />)\r\n    return inputFields\r\n  }\r\n\r\n  if (formView) {\r\n    return(\r\n      <form className={classes.root} Validate autoComplete=\"off\" onSubmit={handleSubmission}>\r\n        <TextField id=\"name-leader\" label=\"Name (Leader)\" variant=\"outlined\" fullWidth={true} required />\r\n        <TextField id=\"email\" label=\"Email (Leader)\" type=\"email\" variant=\"outlined\" fullWidth={true} required />\r\n        <TextField id=\"member-count\" label=\"Members count (excluding leader)\" variant=\"outlined\" \r\n        type=\"number\" InputProps={{ inputProps: { min: 1} }} fullWidth={true} value={additionalTeamMembers}\r\n        onChange={handleTeamNumberChange} required />\r\n        {generateNameFields(additionalTeamMembers)}\r\n        {/*Dropdopwn for events*/}\r\n        <InputLabel id=\"mutiple-event-label\">Events*</InputLabel>\r\n        <Select\r\n        labelId=\"mutiple-event-label\"\r\n        id=\"mutiple-events\"\r\n        multiple\r\n        value={choosenEvents}\r\n        onChange={handleChangeMultiple}\r\n        input={<Input />}\r\n        fullWidth={true}\r\n        required\r\n        >\r\n        {sportsEvents.map(event=> (\r\n          <MenuItem key={event} value={event}>\r\n          {event}\r\n          </MenuItem>\r\n        ))}\r\n        </Select>\r\n        {/*-------------------*/}\r\n        <TextField id=\"college\" label=\"College\" variant=\"outlined\" fullWidth={true} required />\r\n        <FormControlLabel control={<Checkbox id=\"stay-check\" value=\"stayNeeded\" fullWidth={true} />}\r\n        label=\"Check here if you need accommodation\"\r\n        />\r\n        {/*---Submit button---*/}\r\n        <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n        Submit\r\n        </Button>\r\n        {/*------------------*/}\r\n      </form>\r\n    )\r\n\r\n  } else {\r\n\r\n    return(\r\n      <React.Fragment>\r\n        <Confirm data={data} />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleEdit}>\r\n          Edit\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={submitForm}>\r\n          Proceed\r\n        </Button>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TeamForm","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Confirm from './Confirm'\r\n\r\nconst SingleForm = () => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      zIndex: 1,\r\n      color: 'white',\r\n      opcaity:1,\r\n    },\r\n    card: {\r\n      minWidth: 275,\r\n    },\r\n    cardbullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    cardtitle: {\r\n      fontSize: 14,\r\n    },\r\n    cardpos: {\r\n      marginBottom: 12,\r\n    },\r\n    gridroot: {\r\n      flexGrow: 1,\r\n      overflow: 'hidden',\r\n      padding: theme.spacing(0, 3),\r\n    },\r\n    paper: {\r\n      maxWidth: 700,\r\n      margin: `${theme.spacing(1)}px auto`,\r\n      padding: theme.spacing(2),\r\n    },\r\n    registerpaper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    eventroot: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: 200,\r\n      },\r\n    },\r\n    TextField: {\r\n      margin: 10,\r\n    },\r\n    overlay: {\r\n      position:'absolute',\r\n      width: '100%',\r\n      height: '90vh',\r\n      backgroundColor:'black',\r\n      zIndex:1,\r\n      opacity:0.5,\r\n    },\r\n    textcontainer: {\r\n      padding: '16px 32px',\r\n      position: 'absolute',\r\n      marginLeft:650,\r\n      marginTop:300,\r\n      color: 'white',\r\n      border: 'solid',\r\n      borderColor:'white',\r\n      opcaity:1,\r\n      borderWidth: 'thick ',\r\n      zIndex: 2,\r\n    }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  // Logic for the drop-down menu.\r\n  // List of events to choose from. Change it to add the events.\r\n  const sportsEvents = [\r\n    'Event1',\r\n    'Event2',\r\n    'Event3',\r\n    'Event4',\r\n    'Event5',\r\n    'Event6'\r\n  ];\r\n\r\n  const [choosenEvents, setChoosenEvents] = React.useState([])\r\n\r\n  const handleChangeMultiple = event => {\r\n    setChoosenEvents(event.target.value)\r\n  };\r\n\r\n  // States to handle input from text-field.\r\n  const [nameInput, setNameInput] = useState('')\r\n  const [emailInput, setEmailInput] = useState('')\r\n  const [collegeInput, setCollegeInput] = useState('')\r\n  const [stayInput, setStayInput] = useState(false)\r\n\r\n  // Event handler for text-field input change\r\n  const handleNameInputChange = (event) => {\r\n    setNameInput(event.target.value)\r\n  }\r\n\r\n  const handleEmailInputChange = (event) => {\r\n    setEmailInput(event.target.value)\r\n  }\r\n\r\n  const handleCollegeInputChange = (event) => {\r\n    setCollegeInput(event.target.value)\r\n  }\r\n\r\n  const handleStayInputChange = (event) => {\r\n    setStayInput(event.target.checked)\r\n  }\r\n\r\n  // State to toggle between form view & confirmation view.\r\n  const [formView, setFormView] = useState(true)\r\n\r\n  // State to hold the user entered data.\r\n  const [data, setData] = useState({})\r\n\r\n  // Function for handling form submissions.\r\n  const handleSubmission = (event) => {\r\n    // Handle the form submission.\r\n    event.preventDefault()\r\n    if (choosenEvents.length === 0) {\r\n      alert('Please fill the events you want to participate in.')\r\n      return\r\n    }\r\n\r\n    const inputData = {\r\n      single: true,\r\n      name: nameInput,\r\n      email: emailInput,\r\n      teamMemberCount: 0,\r\n      teamMemberName: null,\r\n      events: choosenEvents,\r\n      college: collegeInput,\r\n      stay: stayInput,\r\n    }\r\n    setData(inputData)\r\n\r\n    setFormView(false)\r\n  }\r\n\r\n  // Event-handler for edit button click\r\n  const handleEdit = () => {\r\n    setFormView(true)\r\n  }\r\n\r\n  // Event-handler for proceed button click\r\n  const submitForm = () => {\r\n    console.log('Clicked')\r\n    /*\r\n    -\r\n    - Write the code to push the userInput to database inside this function.\r\n    -\r\n    */\r\n  }\r\n\r\n  if (formView) {\r\n    return (\r\n      <form className={classes.root} autoComplete=\"off\" onSubmit={handleSubmission} >\r\n        <TextField id=\"name\" label=\"Name\" variant=\"outlined\" fullWidth={true} required\r\n        value={nameInput} onChange={handleNameInputChange} />\r\n        <TextField id=\"email\" label=\"Email\" type=\"email\" variant=\"outlined\" fullWidth={true} required\r\n        value={emailInput} onChange={handleEmailInputChange} />\r\n        {/*Dropdopwn for events*/}\r\n        <InputLabel id=\"mutiple-event-label\">Events*</InputLabel>\r\n        <Select\r\n          labelId=\"mutiple-event-label\"\r\n          id=\"mutiple-events\"\r\n          multiple\r\n          value={choosenEvents}\r\n          onChange={handleChangeMultiple}\r\n          input={<Input />}\r\n          fullWidth={true}\r\n          required\r\n        >\r\n\r\n        {sportsEvents.map(event=> (\r\n          <MenuItem key={event} value={event}>\r\n            {event}\r\n          </MenuItem>\r\n        ))}\r\n\r\n        </Select>\r\n        {/*-------------------*/}\r\n        <TextField id=\"college\" label=\"College\" variant=\"outlined\" fullWidth={true} required \r\n        value={collegeInput} onChange={handleCollegeInputChange} />\r\n        <FormControlLabel id=\"stay-label\"\r\n         control={<Checkbox id=\"stay-check\" value=\"stayNeeded\" fullWidth={true} checked={stayInput} onChange={handleStayInputChange} />}\r\n         label=\"Check here if you need accommodation\"\r\n        />\r\n        {/*---Submit button---*/}\r\n        <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n        {/*------------------*/}\r\n      </form>\r\n    )\r\n\r\n  } else {\r\n\r\n    return(\r\n      <React.Fragment>\r\n        <Confirm data={data} />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleEdit}>\r\n          Edit\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={submitForm}>\r\n          Proceed\r\n        </Button>\r\n      </React.Fragment>\r\n    )\r\n\r\n  }\r\n}\r\n\r\n  export default SingleForm","import React, { Component, Fragment } from 'react';\nimport {render} from 'react-dom';\nimport App from './App';\nimport TeamForm from './components/TeamForm'\nimport SingleForm from './components/SingleForm'\nimport Confirm from './components/Confirm'\nimport {Route, Link, HashRouter as Router} from 'react-router-dom'\n\nconst routing = (\n    <Router basename=\"/\">\n      <div>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/single\" component={SingleForm} />\n        <Route path=\"/team\" component={TeamForm} />\n        <Route path=\"/confirm\" component={Confirm} />\n      </div>\n    </Router>\n)\n\nrender(routing, document.getElementById(\"root\"))"],"sourceRoot":""}