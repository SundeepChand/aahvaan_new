{"version":3,"sources":["App.js","components/Confirm.js","components/TeamForm.js","components/SingleForm.js","index.js"],"names":["images","useStyles","createMuiTheme","palette","primary","main","secondary","light","contrastText","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","zIndex","color","opcaity","card","minWidth","cardbullet","display","margin","transform","cardtitle","fontSize","cardpos","marginBottom","gridroot","overflow","padding","paper","maxWidth","registerpaper","textAlign","text","eventroot","width","TextField","overlay","position","height","backgroundColor","opacity","textcontainer","top","left","right","border","borderColor","borderWidth","Confirm","data","single","Fragment","name","email","events","college","stay","teamMemberCount","teamMemberName","map","member","index","TeamForm","classes","background","form","marginLeft","InputLabel","Select","Checkbox","Button","marginTop","formControl","useState","nameInput","setNameInput","emailInput","setEmailInput","collegeInput","setCollegeInput","stayInput","setStayInput","React","additionalTeamMembers","setAdditionalMembers","formView","setFormView","setData","choosenEvent","setChoosenEvent","align","AppBar","className","autoComplete","onSubmit","event","preventDefault","inputData","document","getElementById","value","checked","i","push","alert","id","label","variant","required","onChange","target","type","InputProps","inputProps","min","fullWidth","num","inputFields","key","generateNameFields","FormControl","labelId","input","Input","MenuItem","disabled","FormControlLabel","control","onClick","console","log","SingleForm","routing","basename","exact","path","component","setIndex","useEffect","timer","setInterval","prev","clearInterval","Toolbar","Typography","Paper","style","onRequestChange","image","objectFit","src","icon","faChevronCircleDown","Grid","container","item","xs","Link","to","faUser","faUsers","Card","faAdobe","faAmazon","faApple","faGoogle","faMicrosoft","CardContent","gutterBottom","pos","render"],"mappings":"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","file":"static/js/main.78ec9f17.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Gallery, GalleryImage } from 'react-gesture-gallery';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser, faUsers, faChevronCircleDown} from '@fortawesome/free-solid-svg-icons'\r\nimport { faAdobe, faApple, faGoogle, faAmazon, faMicrosoft } from '@fortawesome/free-brands-svg-icons'\r\n\r\n// import the custon CSS\r\nimport './styles/index.css'\r\n\r\nconst images = [\r\n  'http://www.icons101.com/icon_png/size_256/id_76704/Google_Settings.png',\r\n  'http://www.icons101.com/icon_png/size_256/id_80975/GoogleInbox.png',\r\n  'http://www.icons101.com/icon_png/size_256/id_79394/youtube.png',\r\n];\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      // light: will be calculated from palette.primary.main,\r\n      main: '#D98825',\r\n      // dark: will be calculated from palette.primary.main,\r\n      // contrastText: will be calculated to contrast with palette.primary.main\r\n    },\r\n    secondary: {\r\n      light: '#F2B84B',\r\n      main: '#D98825',\r\n      // dark: will be calculated from palette.secondary.main,\r\n      contrastText: '#ffcc00',\r\n    },\r\n    // error: will use the default color\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    zIndex: 1,\r\n    color: 'white',\r\n    opcaity:1,\r\n  },\r\n  card: {\r\n    minWidth: 275,\r\n  },\r\n  cardbullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  cardtitle: {\r\n    fontSize: 14,\r\n  },\r\n  cardpos: {\r\n    marginBottom: 12,\r\n  },\r\n  gridroot: {\r\n    flexGrow: 1,\r\n    overflow: 'hidden',\r\n    padding: theme.spacing(0, 3),\r\n  },\r\n  paper: {\r\n    maxWidth: 700,\r\n    margin: `${theme.spacing(1)}px auto`,\r\n    padding: theme.spacing(2),\r\n  },\r\n  registerpaper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  eventroot: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: 200,\r\n    },\r\n  },\r\n  TextField: {\r\n    margin: 10,\r\n  },\r\n  overlay: {\r\n    position:'absolute',\r\n    width: '99.09%',\r\n    height: '90vh',\r\n    backgroundColor:'black',\r\n    zIndex:1,\r\n    opacity:0.5,\r\n  },\r\n  textcontainer: {\r\n    position: 'absolute',\r\n    top:'45%',\r\n    left:'30%',\r\n    right:'30%',\r\n    color: 'white',\r\n    border: 'solid',\r\n    borderColor:'white',\r\n    opcaity:1,\r\n    borderWidth: 'thick ',\r\n    zIndex: 2,\r\n  }\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const[index,setIndex] = React.useState(0)\r\n  const classes = useStyles();\r\n  const [events, setEvents] = React.useState('1');  \r\n\r\n  const handleChange = event => {\r\n    setEvents(events.target.value);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      if (index === 2) {\r\n        setIndex(0);\r\n      } else {\r\n        setIndex(prev => prev + 1);\r\n      }\r\n    }, 3000);\r\n    return () => clearInterval(timer);\r\n  }, [index]);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className={classes.root}>\r\n        <AppBar position=\"sticky\" color='secondary'>\r\n          <Toolbar>\r\n            <Typography variant=\"h5\" className={classes.title} align='center'>\r\n              AAHVAAN\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n      <div className=\"overlay-text-container\" align=\"center\">\r\n        <h1 className=\"overlay-text\">\r\n          AAHVAAN\r\n        </h1>\r\n      </div>\r\n      <div className=\"overlay-bg\">\r\n      </div>\r\n      <Paper>\r\n        <Gallery\r\n          style={{\r\n            background: \"grey\",\r\n            height: \"90vh\",\r\n            width: '100%',\r\n          }}\r\n          index={index}\r\n          onRequestChange={i => {\r\n            setIndex(i);\r\n          }}\r\n        >\r\n          {images.map(image => (\r\n            <GalleryImage objectFit=\"contain\" key={image} src={image} className=\"image\"/>\r\n          ))}\r\n        </Gallery>\r\n      </Paper>\r\n\r\n      {/*---------Form Components-------------*/}\r\n      <div className={classes.root}>\r\n        <AppBar position=\"sticky\" color='secondary'>\r\n          <Toolbar>\r\n            <Typography variant=\"h5\" className={classes.title} align='center'>\r\n              REGISTER\r\n              <br />\r\n              <FontAwesomeIcon icon={faChevronCircleDown} />\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper} align=\"center\">\r\n            <Button component={ Link } to=\"/single\" variant=\"contained\" color=\"secondary\">\r\n              <FontAwesomeIcon icon={faUser} />&nbsp;Single\r\n            </Button>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper} align=\"center\">\r\n            <Button component={ Link } to=\"/team\" variant=\"contained\" color=\"secondary\">\r\n              <FontAwesomeIcon icon={faUsers} />&nbsp;Team\r\n            </Button>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n      {/*-------------------------------------*/}\r\n\r\n      {/*------- Bar for sponsers-------*/}\r\n      <Paper>\r\n        <Card>\r\n          <Typography variant=\"h5\" color=\"textSecondary\" align=\"center\">\r\n            Our Sponsers\r\n          </Typography>\r\n          <Typography variant=\"h6\" align=\"center\">\r\n            <FontAwesomeIcon icon={faAdobe} />&nbsp;&nbsp;\r\n            <FontAwesomeIcon icon={faAmazon} />&nbsp;&nbsp;\r\n            <FontAwesomeIcon icon={faApple} />&nbsp;&nbsp;\r\n            <FontAwesomeIcon icon={faGoogle} />&nbsp;&nbsp;\r\n            <FontAwesomeIcon icon={faMicrosoft} />&nbsp;&nbsp;\r\n          </Typography>\r\n        </Card>\r\n      </Paper>\r\n      {/*------------------------------------*/}\r\n\r\n      <Paper align=\"center\">\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n              Delhi Technological University\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\" color=\"textSecondary\">\r\n              AAHVAAN\r\n            </Typography>\r\n            <Typography className={classes.pos} color=\"textSecondary\">\r\n              @aahvaan\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\" color=\"textSecondary\">\r\n              THIS IS FOOTER\r\n              <br />\r\n              {'\"sports spirit\"'}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>  \r\n      </Paper>\r\n    </div>    \r\n  );\r\n}","import React from 'react'\r\n\r\nconst generateMembersList = (members) => {\r\n  return(\r\n    members.map((member, index) => <p>Member {index + 1}: {member}</p>)\r\n  )\r\n}\r\n\r\nconst Confirm = ({ data }) => {\r\n  if (data.single) {\r\n    // For single registrations.\r\n    return (\r\n      <React.Fragment>\r\n        <p>Registration type: Single</p>\r\n        <p>Name: {data.name}</p>\r\n        <p>Email-id: {data.email}</p>\r\n        <p>Event: {data.events}</p>\r\n        <p>College: {data.college}</p>\r\n        <p>Accommodation wanted: {data.stay ? 'Yes' : 'No'}</p>\r\n      </React.Fragment>\r\n    )\r\n  } else {\r\n    // For team registrations.\r\n    return (\r\n      <React.Fragment>\r\n        <p>Registration type: Team</p>\r\n        <p>Name (Leader): {data.name}</p>\r\n        <p>Email-id (Leader): {data.email}</p>\r\n        <p>Event: {data.events}</p>\r\n        <p>Members Count: {data.teamMemberCount}</p>\r\n        <p>Members Name:</p>\r\n        {generateMembersList(data.teamMemberName)}\r\n        <p>College: {data.college}</p>\r\n        <p>Accommodation wanted: {data.stay ? 'Yes' : 'No'}</p>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Confirm","import React, { useState } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Input from '@material-ui/core/Input'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Confirm from './Confirm'\r\n\r\nconst TeamForm = () => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      background: 'white',\r\n      color: 'black',\r\n    },\r\n    form: {\r\n      spacing: 5\r\n    },\r\n    TextField: {\r\n      padding: 0,\r\n      margin: 8,\r\n      spacing: 5,\r\n      width: '92vw',\r\n      marginLeft: '4vw'\r\n    },\r\n    InputLabel: {\r\n      padding: 5,\r\n      margin: 10,\r\n      marginLeft: '4vw',\r\n      spacing: 5\r\n    },\r\n    Select: {\r\n      padding: 5,\r\n      margin: 5,\r\n      marginLeft: '4vw',\r\n      spacing: 5,\r\n      width: '92vw',\r\n    },\r\n    Checkbox: {\r\n      padding: 10,\r\n      margin: 10,\r\n      spacing: 10,\r\n      marginLeft: '4vw'\r\n    },\r\n    Button: {\r\n      marginLeft: '4vw',\r\n      marginTop: theme.spacing(0),\r\n      spacing: 5,\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },  \r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  // States to handle input from text-field.\r\n  const [nameInput, setNameInput] = useState('')\r\n  const [emailInput, setEmailInput] = useState('')\r\n  const [collegeInput, setCollegeInput] = useState('')\r\n  const [stayInput, setStayInput] = useState(false)\r\n  const [additionalTeamMembers, setAdditionalMembers] = React.useState('')\r\n\r\n  // Event handler for text-field input change\r\n  const handleNameInputChange = (event) => {\r\n    setNameInput(event.target.value)\r\n  }\r\n\r\n  const handleEmailInputChange = (event) => {\r\n    setEmailInput(event.target.value)\r\n  }\r\n\r\n  const handleCollegeInputChange = (event) => {\r\n    setCollegeInput(event.target.value)\r\n  }\r\n\r\n  const handleStayInputChange = (event) => {\r\n    setStayInput(event.target.checked)\r\n  }\r\n\r\n  const handleTeamNumberChange = (event) => {\r\n    setAdditionalMembers(event.target.value)\r\n  }\r\n\r\n  // State to toggle between form-view & confirmation-view\r\n  const [formView, setFormView] = useState(true)\r\n\r\n  // State to hold the user input\r\n  const [data, setData] = useState({})\r\n  //----------- Function to handle form submission -----------\r\n  const handleSubmission = (event) => {\r\n    // Handle the form submission.\r\n    event.preventDefault()\r\n    if (choosenEvent === '') {\r\n      alert('Please fill the events you want to participate in.')\r\n      return\r\n    }\r\n\r\n    const inputData = {\r\n      name: document.getElementById('name-leader').value,\r\n      email: document.getElementById('email').value,\r\n      teamMemberCount: document.getElementById('member-count').value,\r\n      teamMemberName: [],\r\n      events: choosenEvent,\r\n      college: document.getElementById('college').value,\r\n      stay: document.getElementById('stay-check').checked,\r\n    }\r\n    // Run a loop to collect the names of the team-members\r\n    for (let i = 0; i < additionalTeamMembers; i++) {\r\n      inputData.teamMemberName.push(document.getElementById(`member-name${i}`).value)\r\n    }\r\n\r\n    setData(inputData)\r\n    setFormView(false)\r\n  }\r\n\r\n  // Event-handler for edit button click\r\n  const handleEdit = () => {\r\n    setFormView(true)\r\n  }\r\n\r\n  // Event-handler for proceed button click\r\n  const submitForm = () => {\r\n    console.log('Clicked')\r\n    console.log(data)\r\n    /*\r\n    -\r\n    - Write the code to push the userInput to database inside this function.\r\n    -\r\n    */\r\n  }\r\n\r\n  // Logic for the drop-down menu.\r\n  // List of events to choose from. Change it to add the events.\r\n  const sportsEvents = [\r\n    'Event1',\r\n    'Event2',\r\n    'Event3',\r\n    'Event4',\r\n    'Event5',\r\n    'Event6'\r\n  ];\r\n    \r\n  const [choosenEvent, setChoosenEvent] = React.useState('')\r\n    \r\n  const handleChangeEvent = event => {\r\n    setChoosenEvent(event.target.value)\r\n  };\r\n  \r\n  // Function to generate the field for members.\r\n  const generateNameFields = (num) => {\r\n    const inputFields = []\r\n    for (let i = 0; i < num; i++)\r\n      inputFields.push(<TextField className={classes.TextField} required key={i} id={`member-name${i}`} label={`Member ${i+1}`} variant=\"outlined\" fullWidth={true} />)\r\n    return inputFields\r\n  }\r\n\r\n  if (formView) {\r\n    return(\r\n      <React.Fragment>\r\n        <h1 align=\"center\">\r\n          <AppBar color=\"secondary\">\r\n            TEAM REGISTRATION\r\n          </AppBar> \r\n        </h1>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <form className={classes.root} autoComplete=\"off\" onSubmit={handleSubmission}>\r\n          <TextField className={classes.TextField} id=\"name-leader\" label=\"Name (Leader)\" variant=\"outlined\" required\r\n          value={nameInput} onChange={handleNameInputChange} />\r\n          <TextField className={classes.TextField} id=\"email\" label=\"Email (Leader)\" type=\"email\" variant=\"outlined\" required\r\n          value={emailInput} onChange={handleEmailInputChange} />\r\n          <TextField className={classes.TextField} id=\"member-count\" label=\"Members count (excluding leader)\" variant=\"outlined\" \r\n          type=\"number\" InputProps={{ inputProps: { min: 1} }} fullWidth={true} value={additionalTeamMembers}\r\n          onChange={handleTeamNumberChange} required />\r\n          {generateNameFields(additionalTeamMembers)}\r\n\r\n          {/*Dropdopwn for events*/}\r\n          {/*Dropdopwn for events*/}\r\n          <FormControl required className={classes.formControl}>\r\n            <InputLabel className={classes.InputLabel} id=\"event-label\">Events</InputLabel>\r\n            <Select\r\n            className={classes.Select}\r\n            labelId=\"event-label\"\r\n            id=\"events\"\r\n            value={choosenEvent}\r\n            onChange={handleChangeEvent}\r\n            input={<Input />}\r\n            >\r\n              <MenuItem value=\"\" disabled>Events</MenuItem>\r\n              {sportsEvents.map(event=> (\r\n                <MenuItem key={event} value={event}>\r\n                {event}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          {/*-------------------*/}\r\n\r\n          <TextField className={classes.TextField} id=\"college\" label=\"College\" variant=\"outlined\" required \r\n          value={collegeInput} onChange={handleCollegeInputChange} />\r\n          <FormControlLabel id=\"stay-label\"\r\n          control={<Checkbox className={classes.Checkbox} id=\"stay-check\" value=\"stayNeeded\" checked={stayInput} onChange={handleStayInputChange} />}\r\n          label=\"Check here if you need accommodation\"\r\n          />\r\n          {/*---Submit button---*/}<br />\r\n          <Button className={classes.Button} variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n          Submit\r\n          </Button>\r\n          {/*------------------*/}\r\n        </form>\r\n      </React.Fragment>\r\n    )\r\n\r\n  } else {\r\n\r\n    return(\r\n      <React.Fragment>\r\n        <Confirm data={data} />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleEdit}>\r\n          Edit\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={submitForm}>\r\n          Proceed\r\n        </Button>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TeamForm","import React, { useState } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Input from '@material-ui/core/Input'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Confirm from './Confirm'\r\n\r\nconst SingleForm = () => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      background: 'white',\r\n      color: 'black',\r\n    },\r\n    form: {\r\n      spacing: 5\r\n    },\r\n    TextField: {\r\n      padding: 0,\r\n      margin: 8,\r\n      spacing: 5,\r\n      width: '92vw',\r\n      marginLeft: '4vw'\r\n    },\r\n    InputLabel: {\r\n      padding: 5,\r\n      margin: 10,\r\n      marginLeft: '4vw',\r\n      spacing: 5\r\n    },\r\n    Select: {\r\n      padding: 5,\r\n      margin: 5,\r\n      marginLeft: '4vw',\r\n      spacing: 5,\r\n      width: '92vw',\r\n    },\r\n    Checkbox: {\r\n      padding: 10,\r\n      margin: 10,\r\n      spacing: 10,\r\n      marginLeft: '4vw'\r\n    },\r\n    Button: {\r\n      marginLeft: '4vw',\r\n      marginTop: theme.spacing(0),\r\n      spacing: 5,\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  // Logic for the drop-down menu.\r\n  // List of events to choose from. Change it to add the events.\r\n  const sportsEvents = [\r\n    'Event1',\r\n    'Event2',\r\n    'Event3',\r\n    'Event4',\r\n    'Event5',\r\n    'Event6'\r\n  ];\r\n\r\n  const [choosenEvent, setChoosenEvent] = React.useState('')\r\n\r\n  const handleChangeEvent = event => {\r\n    setChoosenEvent(event.target.value)\r\n  };\r\n\r\n  // States to handle input from text-field.\r\n  const [nameInput, setNameInput] = useState('')\r\n  const [emailInput, setEmailInput] = useState('')\r\n  const [collegeInput, setCollegeInput] = useState('')\r\n  const [stayInput, setStayInput] = useState(false)\r\n\r\n  // Event handler for text-field input change\r\n  const handleNameInputChange = (event) => {\r\n    setNameInput(event.target.value)\r\n  }\r\n\r\n  const handleEmailInputChange = (event) => {\r\n    setEmailInput(event.target.value)\r\n  }\r\n\r\n  const handleCollegeInputChange = (event) => {\r\n    setCollegeInput(event.target.value)\r\n  }\r\n\r\n  const handleStayInputChange = (event) => {\r\n    setStayInput(event.target.checked)\r\n  }\r\n\r\n  // State to toggle between form view & confirmation view.\r\n  const [formView, setFormView] = useState(true)\r\n\r\n  // State to hold the user entered data.\r\n  const [data, setData] = useState({})\r\n\r\n  // Function for handling form submissions.\r\n  const handleSubmission = (event) => {\r\n    // Handle the form submission.\r\n    event.preventDefault()\r\n    if (choosenEvent === '') {\r\n      alert('Please fill the events you want to participate in.')\r\n      return\r\n    }\r\n\r\n    const inputData = {\r\n      single: true,\r\n      name: nameInput,\r\n      email: emailInput,\r\n      teamMemberCount: 0,\r\n      teamMemberName: null,\r\n      events: choosenEvent,\r\n      college: collegeInput,\r\n      stay: stayInput,\r\n    }\r\n    setData(inputData)\r\n\r\n    setFormView(false)\r\n  }\r\n\r\n  // Event-handler for edit button click\r\n  const handleEdit = () => {\r\n    setFormView(true)\r\n  }\r\n\r\n  // Event-handler for proceed button click\r\n  const submitForm = () => {\r\n    console.log('Clicked')\r\n    console.log(data)\r\n    /*\r\n    -\r\n    - Write the code to push the userInput to database inside this function.\r\n    -\r\n    */\r\n  }\r\n\r\n  if (formView) {\r\n    return (\r\n      <React.Fragment>\r\n        <h1 align=\"center\">\r\n          <AppBar color=\"secondary\">\r\n            SINGLE REGISTRATION\r\n          </AppBar> \r\n        </h1>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <form className={classes.root} autoComplete=\"off\" onSubmit={handleSubmission} >\r\n          <TextField className={classes.TextField} id=\"name\" label=\"Name\" variant=\"outlined\" required\r\n          value={nameInput} onChange={handleNameInputChange} />\r\n          <TextField className={classes.TextField} id=\"email\" label=\"Email\" type=\"email\" variant=\"outlined\" required\r\n          value={emailInput} onChange={handleEmailInputChange} />\r\n          \r\n          {/*Dropdopwn for events*/}\r\n          <FormControl required className={classes.formControl}>\r\n            <InputLabel className={classes.InputLabel} id=\"event-label\">Events</InputLabel>\r\n            <Select\r\n            className={classes.Select}\r\n            labelId=\"event-label\"\r\n            id=\"events\"\r\n            value={choosenEvent}\r\n            onChange={handleChangeEvent}\r\n            input={<Input />}\r\n            >\r\n            <MenuItem value=\"\" disabled>Events</MenuItem>\r\n            {sportsEvents.map(event=> (\r\n              <MenuItem key={event} value={event}>\r\n              {event}\r\n              </MenuItem>\r\n            ))}\r\n            </Select>\r\n          </FormControl>\r\n          \r\n          {/*-------------------*/}\r\n          <TextField className={classes.TextField} id=\"college\" label=\"College\" variant=\"outlined\" required \r\n          value={collegeInput} onChange={handleCollegeInputChange} />\r\n          <FormControlLabel id=\"stay-label\"\r\n          control={<Checkbox className={classes.Checkbox} id=\"stay-check\" value=\"stayNeeded\" checked={stayInput} onChange={handleStayInputChange} />}\r\n          label=\"Check here if you need accommodation\"\r\n          />\r\n          {/*---Submit button---*/}\r\n          <br />\r\n          <Button className={classes.Button} variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n          {/*------------------*/}\r\n        </form>\r\n      </React.Fragment>\r\n    )\r\n\r\n  } else {\r\n\r\n    return(\r\n      <React.Fragment>\r\n        <Confirm data={data} />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleEdit}>\r\n          Edit\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={submitForm}>\r\n          Proceed\r\n        </Button>\r\n      </React.Fragment>\r\n    )\r\n\r\n  }\r\n} \r\n\r\nexport default SingleForm","import React from 'react';\nimport {render} from 'react-dom';\nimport App from './App';\nimport TeamForm from './components/TeamForm'\nimport SingleForm from './components/SingleForm'\nimport Confirm from './components/Confirm'\nimport {Route, HashRouter as Router} from 'react-router-dom'\n\nconst routing = (\n    <Router basename=\"/\">\n      <div>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/single\" component={SingleForm} />\n        <Route path=\"/team\" component={TeamForm} />\n        <Route path=\"/confirm\" component={Confirm} />\n      </div>\n    </Router>\n)\n\nrender(routing, document.getElementById(\"root\"))"],"sourceRoot":""}