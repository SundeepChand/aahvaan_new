{"version":3,"sources":["App.js","index.js"],"names":["images","useStyles","createMuiTheme","palette","primary","main","secondary","light","contrastText","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","card","minWidth","cardbullet","display","margin","transform","cardtitle","fontSize","cardpos","marginBottom","gridroot","overflow","padding","paper","maxWidth","registerpaper","textAlign","color","text","eventroot","width","render","React","useState","index","setIndex","classes","useEffect","timer","setInterval","prev","clearInterval","handleSubmissionSingle","event","handleSubmissionTeam","singleRegister","setSingleRegister","handleTeamNumberChange","setAdditionalMembers","target","value","additionalTeamMembers","generateNameFields","num","inputFields","i","push","TextField","key","id","label","variant","fullWidth","required","sportsEvents","choosenEvents","setChoosenEvents","handleChangeMultiple","ThemeProvider","className","AppBar","position","Toolbar","Typography","align","Paper","style","background","height","onRequestChange","map","image","objectFit","src","Button","onClick","Grid","container","item","xs","Validate","autoComplete","onSubmit","InputLabel","Select","labelId","multiple","onChange","input","Input","MenuItem","FormControlLabel","control","Checkbox","type","InputProps","inputProps","min","Card","CardContent","gutterBottom","component","pos","document","getElementById"],"mappings":"+VA2CMA,EAAS,CACb,yEACA,qEACA,kEAqBIC,GAlBQC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CAEPC,KAAM,WAIRC,UAAW,CACTC,MAAO,UACPF,KAAM,UAENG,aAAc,cAMFC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,GAEZK,KAAM,CACJC,SAAU,KAEZC,WAAY,CACVC,QAAS,eACTC,OAAQ,QACRC,UAAW,cAEbC,UAAW,CACTC,SAAU,IAEZC,QAAS,CACPC,aAAc,IAEhBC,SAAU,CACRf,SAAU,EACVgB,SAAU,SACVC,QAASnB,EAAMK,QAAQ,EAAG,IAE5Be,MAAO,CACLC,SAAU,IACVV,OAAO,GAAD,OAAKX,EAAMK,QAAQ,GAAnB,WACNc,QAASnB,EAAMK,QAAQ,IAEzBiB,cAAe,CACbH,QAASnB,EAAMK,QAAQ,GACvBkB,UAAW,SACXC,MAAOxB,EAAMP,QAAQgC,KAAK7B,WAE5B8B,UAAW,CACT,uBAAwB,CACtBf,OAAQX,EAAMK,QAAQ,GACtBsB,MAAO,WCxGbC,iBAAO,mBD6GQ,WAAyB,IAAD,EACbC,IAAMC,SAAS,GADF,mBAC/BC,EAD+B,KACzBC,EADyB,KAE/BC,EAAU1C,IAFqB,EAGTsC,IAAMC,SAAS,KAHN,6BAUrCD,IAAMK,WAAU,WACd,IAAMC,EAAQC,aAAY,WAEtBJ,EADY,IAAVD,EACO,EAEA,SAAAM,GAAI,OAAIA,EAAO,MAEzB,KACH,OAAO,kBAAMC,cAAcH,MAC1B,CAACJ,IAKJ,IAAMQ,EAAyB,SAACC,KAI1BC,EAAuB,SAACD,KA5BO,EAkCOX,IAAMC,UAAS,GAlCtB,mBAkC9BY,EAlC8B,KAkCdC,EAlCc,KAmJ/BC,EAAyB,SAACJ,GAC9BK,EAAqBL,EAAMM,OAAOC,QApJC,EAuJiBlB,IAAMC,SAAS,IAvJhC,mBAuJ9BkB,EAvJ8B,KAuJPH,EAvJO,KAyJ/BI,EAAqB,SAACC,GAE1B,IADA,IAAMC,EAAc,GACXC,EAAI,EAAGA,EAAIF,EAAKE,IACvBD,EAAYE,KACV,kBAACC,EAAA,EAAD,CAAWC,IAAKH,EAAGI,GAAE,qBAAgBJ,EAAE,GAAKK,MAAK,iBAAYL,EAAE,GAC/DM,QAAQ,WAAWC,WAAW,EAAMC,UAAQ,KAEhD,OAAOT,GAKHU,EAAe,CACnB,SACA,SACA,SACA,SACA,SACA,UA3KmC,EA8KKhC,IAAMC,SAAS,IA9KpB,mBA8K9BgC,EA9K8B,KA8KfC,EA9Ke,KAgL/BC,EAAuB,SAAAxB,GAC3BuB,EAAiBvB,EAAMM,OAAOC,QAOhC,OACE,kBAACkB,EAAA,EAAD,KACA,yBAAKC,UAAWjC,EAAQhC,MACtB,kBAACkE,EAAA,EAAD,CAAQC,SAAS,SAAS5C,MAAM,aAC9B,kBAAC6C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYZ,QAAQ,KAAKQ,UAAWjC,EAAQ3B,MAAOiE,MAAM,UAAzD,cAMN,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CACEC,MAAO,CACLC,WAAY,OACZC,OAAQ,OACRhD,MAAO,QAETI,MAAOA,EACP6C,gBAAiB,SAAAxB,GACfpB,EAASoB,KAGV9D,EAAOuF,KAAI,SAAAC,GAAK,OACf,kBAAC,IAAD,CAAcC,UAAU,UAAUxB,IAAKuB,EAAOE,IAAKF,SAIzD,yBAAKZ,UAAWjC,EAAQhC,MACtB,kBAACkE,EAAA,EAAD,CAAQC,SAAS,SAAS5C,MAAM,aAC9B,kBAAC6C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYZ,QAAQ,KAAKQ,UAAWjC,EAAQ3B,MAAOiE,MAAM,UAAzD,eAQN,kBAACU,EAAA,EAAD,CAAQvB,QAAQ,YAAYlC,MAAM,YAAY0D,QA5Lf,WAC/BvC,GAAmBD,GACnBqB,EAAiB,MA0LjB,gBACgBrB,EAAiB,OAAS,gBAD1C,YAGA,kBAACyC,EAAA,EAAD,CAAMC,WAAS,EAAC/E,QAAS,GA1LrBqC,EAEA,kBAACyC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACd,EAAA,EAAD,CAAON,UAAWjC,EAAQX,eACxB,yBAAK4C,UAAWjC,EAAQhC,MACtB,kBAACkE,EAAA,EAAD,CAAQC,SAAS,WAAW5C,MAAM,aAChC,kBAAC6C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYZ,QAAQ,KAAKQ,UAAWjC,EAAQ3B,MAAOiE,MAAM,UAAzD,YAMJ,0BAAML,UAAWjC,EAAQhC,KAAMsF,UAAQ,EAACC,aAAa,MAAMC,SAAUlD,GACnE,kBAACe,EAAA,EAAD,CAAWE,GAAG,cAAcC,MAAM,OAAOC,QAAQ,WAAWC,WAAW,EAAMC,UAAQ,IACrF,kBAACN,EAAA,EAAD,CAAWE,GAAG,YAAYC,MAAM,KAAKC,QAAQ,WAAWC,WAAW,EAAMC,UAAQ,IAEjF,kBAAC8B,EAAA,EAAD,CAAYlC,GAAG,uBAAf,WACA,kBAACmC,EAAA,EAAD,CACEC,QAAQ,sBACRpC,GAAG,iBACHqC,UAAQ,EACR9C,MAAOe,EACPgC,SAAU9B,EACV+B,MAAO,kBAACC,EAAA,EAAD,MACPrC,WAAW,EACXC,UAAQ,GAEPC,EAAagB,KAAI,SAAArC,GAAK,OACrB,kBAACyD,EAAA,EAAD,CAAU1C,IAAKf,EAAOO,MAAOP,GAC1BA,OAKP,kBAACc,EAAA,EAAD,CAAWE,GAAG,iBAAiBC,MAAM,UAAUC,QAAQ,WAAWC,WAAW,EAAMC,UAAQ,IAC3F,kBAACsC,EAAA,EAAD,CAAkB1C,GAAG,cAAc2C,QAAS,kBAACC,EAAA,EAAD,CAAUrD,MAAM,WAAWY,WAAW,IAChFF,MAAM,yCAGR,kBAACwB,EAAA,EAAD,CAAQvB,QAAQ,YAAYlC,MAAM,YAAY6E,KAAK,UAAnD,cAYR,kBAAClB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACd,EAAA,EAAD,CAAON,UAAWjC,EAAQX,eACxB,yBAAK4C,UAAWjC,EAAQhC,MACpB,kBAACkE,EAAA,EAAD,CAAQC,SAAS,WAAW5C,MAAM,aAChC,kBAAC6C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYZ,QAAQ,KAAKQ,UAAWjC,EAAQ3B,MAAOiE,MAAM,UAAzD,UAMJ,0BAAML,UAAWjC,EAAQhC,KAAMsF,UAAQ,EAACC,aAAa,MAAMC,SAAUhD,GACnE,kBAACa,EAAA,EAAD,CAAWE,GAAG,mBAAmBC,MAAM,gBAAgBC,QAAQ,WAAWC,WAAW,EAAMC,UAAQ,IACnG,kBAACN,EAAA,EAAD,CAAWE,GAAG,qBAAqBC,MAAM,mCAAmCC,QAAQ,WACpF2C,KAAK,SAASC,WAAY,CAAEC,WAAY,CAAEC,IAAK,IAAM7C,WAAW,EAAMZ,MAAOC,EAC7E8C,SAAUlD,EAAwBgB,UAAQ,IACzCX,EAAmBD,GAEpB,kBAAC0C,EAAA,EAAD,CAAYlC,GAAG,uBAAf,WACA,kBAACmC,EAAA,EAAD,CACEC,QAAQ,sBACRpC,GAAG,iBACHqC,UAAQ,EACR9C,MAAOe,EACPgC,SAAU9B,EACV+B,MAAO,kBAACC,EAAA,EAAD,MACPrC,WAAW,EACXC,UAAQ,GAEPC,EAAagB,KAAI,SAAArC,GAAK,OACrB,kBAACyD,EAAA,EAAD,CAAU1C,IAAKf,EAAOO,MAAOP,GAC1BA,OAKP,kBAACc,EAAA,EAAD,CAAWE,GAAG,UAAUC,MAAM,KAAKC,QAAQ,WAAWC,WAAW,EAAMC,UAAQ,IAC/E,kBAACN,EAAA,EAAD,CAAWE,GAAG,eAAeC,MAAM,UAAUC,QAAQ,WAAWC,WAAW,EAAMC,UAAQ,IACzF,kBAACsC,EAAA,EAAD,CAAkBC,QAAS,kBAACC,EAAA,EAAD,CAAUrD,MAAM,WAAWY,WAAW,IAC/DF,MAAM,yCAGR,kBAACwB,EAAA,EAAD,CAAQvB,QAAQ,YAAYlC,MAAM,YAAY6E,KAAK,UAAnD,eAiGd,kBAAC7B,EAAA,EAAD,KACE,kBAACiC,EAAA,EAAD,CAAMvC,UAAWjC,EAAQ1B,MACvB,kBAACmG,EAAA,EAAD,KACE,kBAACpC,EAAA,EAAD,CAAYJ,UAAWjC,EAAQ3B,MAAOkB,MAAM,gBAAgBmF,cAAY,GAAxE,kCAGA,kBAACrC,EAAA,EAAD,CAAYZ,QAAQ,KAAKkD,UAAU,KAAKpF,MAAM,iBAA9C,WAGA,kBAAC8C,EAAA,EAAD,CAAYJ,UAAWjC,EAAQ4E,IAAKrF,MAAM,iBAA1C,YAGA,kBAAC8C,EAAA,EAAD,CAAYZ,QAAQ,QAAQkD,UAAU,IAAIpF,MAAM,iBAAhD,iBAEE,6BACC,yBCnWN,MAASsF,SAASC,eAAe,W","file":"static/js/main.481e7508.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport {Gallery, GalleryImage } from 'react-gesture-gallery';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport { ThemeProvider } from '@material-ui/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\n\nconst events = [\n  {\n    value: '1',\n    label: 'EVENT 1',\n  },\n  {\n    value: '2',\n    label: 'EVENT 2',\n  },\n  {\n    value: '3',\n    label: 'EVENT 1',\n  },\n  {\n    value: '4',\n    label: 'EVENT 1',\n  },\n];\n\nconst images = [\n  'http://www.icons101.com/icon_png/size_256/id_76704/Google_Settings.png',\n  'http://www.icons101.com/icon_png/size_256/id_80975/GoogleInbox.png',\n  'http://www.icons101.com/icon_png/size_256/id_79394/youtube.png',\n];\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      // light: will be calculated from palette.primary.main,\n      main: '#D98825',\n      // dark: will be calculated from palette.primary.main,\n      // contrastText: will be calculated to contrast with palette.primary.main\n    },\n    secondary: {\n      light: '#F2B84B',\n      main: '#D98825',\n      // dark: will be calculated from palette.secondary.main,\n      contrastText: '#ffcc00',\n    },\n    // error: will use the default color\n  },\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  card: {\n    minWidth: 275,\n  },\n  cardbullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  cardtitle: {\n    fontSize: 14,\n  },\n  cardpos: {\n    marginBottom: 12,\n  },\n  gridroot: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    padding: theme.spacing(0, 3),\n  },\n  paper: {\n    maxWidth: 700,\n    margin: `${theme.spacing(1)}px auto`,\n    padding: theme.spacing(2),\n  },\n  registerpaper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  eventroot: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 200,\n    },\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const[index,setIndex] = React.useState(0)\n  const classes = useStyles();\n  const [events, setEvents] = React.useState('1');  \n\n  const handleChange = event => {\n    setEvents(events.target.value);\n  };\n\n\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      if (index === 2) {\n        setIndex(0);\n      } else {\n        setIndex(prev => prev + 1);\n      }\n    }, 3000);\n    return () => clearInterval(timer);\n  }, [index]);\n\n\n  /* -------------- My Changes ---------------*/\n  // Function for handling form submissions.\n  const handleSubmissionSingle = (event) => {\n    // Handle the form submission.\n  }\n\n  const handleSubmissionTeam = (event) => {\n    // Handle the form submission.\n  }\n  //------------------------------------------\n\n  // Logic for switching the form between team & single register.\n  const [singleRegister, setSingleRegister] = React.useState(true)\n  const handleRegisterTypeChange = () => {\n    setSingleRegister(!singleRegister)\n    setChoosenEvents([])        // Reset the choosen events when switching.\n  }\n  const renderRegisterForm = () => {\n    if (singleRegister) {\n      return(\n        <Grid item xs={15}>\n          <Paper className={classes.registerpaper}>\n            <div className={classes.root}>\n              <AppBar position=\"relative\" color='secondary'>\n                <Toolbar>\n                  <Typography variant=\"h5\" className={classes.title} align='center'>\n                    SINGLE\n                  </Typography>\n                </Toolbar>\n              </AppBar>\n              \n              <form className={classes.root} Validate autoComplete=\"off\" onSubmit={handleSubmissionSingle} >\n                <TextField id=\"name-single\" label=\"Name\" variant=\"outlined\" fullWidth={true} required />\n                <TextField id=\"id-single\" label=\"Id\" variant=\"outlined\" fullWidth={true} required />\n                {/*Dropdopwn for events*/}\n                <InputLabel id=\"mutiple-event-label\">Events*</InputLabel>\n                <Select\n                  labelId=\"mutiple-event-label\"\n                  id=\"mutiple-events\"\n                  multiple\n                  value={choosenEvents}\n                  onChange={handleChangeMultiple}\n                  input={<Input />}\n                  fullWidth={true}\n                  required\n                >\n                  {sportsEvents.map(event=> (\n                    <MenuItem key={event} value={event}>\n                      {event}\n                    </MenuItem>\n                  ))}\n                </Select>\n                {/*-------------------*/}\n                <TextField id=\"college-single\" label=\"College\" variant=\"outlined\" fullWidth={true} required />\n                <FormControlLabel id=\"stay-single\" control={<Checkbox value=\"checkedA\" fullWidth={true} />}\n                  label=\"Check here if you need accommodation\"\n                />\n                {/*---Submit button---*/}\n                <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\n                  Submit\n                </Button>\n                {/*------------------*/}\n              </form>\n            \n            </div>\n          </Paper>\n        </Grid>\n      )\n    } else {\n      return(\n        <Grid item xs={15}>\n          <Paper className={classes.registerpaper}>\n            <div className={classes.root}>\n                <AppBar position=\"relative\" color='secondary'>\n                  <Toolbar>\n                    <Typography variant=\"h5\" className={classes.title} align='center'>\n                      TEAM\n                    </Typography>\n                  </Toolbar>\n                </AppBar>\n\n                <form className={classes.root} Validate autoComplete=\"off\" onSubmit={handleSubmissionTeam}>\n                  <TextField id=\"name-team-leader\" label=\"Name (Leader)\" variant=\"outlined\" fullWidth={true} required />\n                  <TextField id=\"number-team-member\" label=\"Members count (excluding leader)\" variant=\"outlined\" \n                  type=\"number\" InputProps={{ inputProps: { min: 1} }} fullWidth={true} value={additionalTeamMembers}\n                  onChange={handleTeamNumberChange} required />\n                  {generateNameFields(additionalTeamMembers)}\n                  {/*Dropdopwn for events*/}\n                  <InputLabel id=\"mutiple-event-label\">Events*</InputLabel>\n                  <Select\n                    labelId=\"mutiple-event-label\"\n                    id=\"mutiple-events\"\n                    multiple\n                    value={choosenEvents}\n                    onChange={handleChangeMultiple}\n                    input={<Input />}\n                    fullWidth={true}\n                    required\n                  >\n                    {sportsEvents.map(event=> (\n                      <MenuItem key={event} value={event}>\n                        {event}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                  {/*-------------------*/}\n                  <TextField id=\"id-team\" label=\"Id\" variant=\"outlined\" fullWidth={true} required />\n                  <TextField id=\"college-team\" label=\"College\" variant=\"outlined\" fullWidth={true} required />\n                  <FormControlLabel control={<Checkbox value=\"checkedA\" fullWidth={true} />}\n                    label=\"Check here if you need accommodation\"\n                  />\n                  {/*---Submit button---*/}\n                  <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\n                    Submit\n                  </Button>\n                  {/*------------------*/}\n                </form>\n              </div>\n          </Paper>\n        </Grid>\n      )\n    }\n  }\n\n  // ----Event handler for member count input----\n  const handleTeamNumberChange = (event) => {\n    setAdditionalMembers(event.target.value)\n  }\n\n  const [additionalTeamMembers, setAdditionalMembers] = React.useState('')\n  // Function to generate the field for members.\n  const generateNameFields = (num) => {\n    const inputFields = []\n    for (let i = 0; i < num; i++)\n      inputFields.push(\n        <TextField key={i} id={`member-name${i+1}`} label={`Member ${i+1}`}\n        variant=\"outlined\" fullWidth={true} required />\n      )\n    return inputFields\n  }\n\n  // Logic for the drop-down menu.\n  // List of events to choose from. Change it to add the events.\n  const sportsEvents = [\n    'Event1',\n    'Event2',\n    'Event3',\n    'Event4',\n    'Event5',\n    'Event6'\n  ];\n\n  const [choosenEvents, setChoosenEvents] = React.useState([])\n\n  const handleChangeMultiple = event => {\n    setChoosenEvents(event.target.value)\n    // console.log(choosenEvents)\n    // console.log(event.target.value)\n  };\n\n  // ----------------END-------------------\n\n  return (\n    <ThemeProvider>\n    <div className={classes.root}>\n      <AppBar position=\"sticky\" color='secondary'>\n        <Toolbar>\n          <Typography variant=\"h5\" className={classes.title} align='center'>\n            AAHVAAN\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n    <Paper>\n      <Gallery\n        style={{\n          background: \"grey\",\n          height: \"90vh\",\n          width: '100%'\n        }}\n        index={index}\n        onRequestChange={i => {\n          setIndex(i);\n        }}\n      >\n        {images.map(image => (\n          <GalleryImage objectFit=\"contain\" key={image} src={image} />\n        ))}\n      </Gallery>\n    </Paper>\n    <div className={classes.root}>\n      <AppBar position=\"sticky\" color='secondary'>\n        <Toolbar>\n          <Typography variant=\"h5\" className={classes.title} align='center'>\n            REGISTER\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n\n    {/*---------My Changes-------------*/}\n    <Button variant=\"contained\" color=\"secondary\" onClick={handleRegisterTypeChange}>\n      Register for {singleRegister ? 'team' : 'single player'} instead\n    </Button>\n    <Grid container spacing={0}>\n      {renderRegisterForm()}\n    </Grid>\n    {/*------------END----------------*/}\n\n    <Paper>\n      <Card className={classes.card}>\n        <CardContent>\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n            Delhi Technological University\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\" color=\"textSecondary\">\n            AAHVAAN\n          </Typography>\n          <Typography className={classes.pos} color=\"textSecondary\">\n            @aahvaan\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" color=\"textSecondary\">\n            THIS IS FOOTER\n            <br />\n            {'\"sports spirit\"'}\n          </Typography>\n        </CardContent>\n        </Card>  \n      </Paper>      \n    </ThemeProvider>    \n  );\n}","import React, { Component, Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport {render} from 'react-dom';\nimport App from './App';\n\nrender(<App />, document.getElementById(\"root\"))"],"sourceRoot":""}